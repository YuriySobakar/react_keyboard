{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,2BAFhB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,WAAW,2BAAD,OAA6BE,EAAME,QAdjE,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BT,UAtBrC,GAAyBU,a,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.dad696b4.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport class App extends Component {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: `The last pressed key is ${event.key}` });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{pressedKey}</p>\n      </div>\n    );\n  }\n}\n\n// export const App: React.FC = () => {\n//   const [key, setKey] = useState('Nothing was pressed yet');\n\n//   useEffect(() => {\n//     document.addEventListener('keyup', (event: KeyboardEvent) => {\n//       setKey(`The last pressed key is [${event.key}]`);\n//     });\n//   }, []);\n\n//   return (\n//     <div className=\"App\">\n//       <p className=\"App__message\">{key}</p>\n//     </div>\n//   );\n// };\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}